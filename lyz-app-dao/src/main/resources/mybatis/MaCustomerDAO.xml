<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.MaCustomerDAO">

    <resultMap id="customerVoResultMap" type="CustomerDO">
        <id column="cus_id" property="cusId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="pic_url" property="picUrl" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="light" property="light" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="BIT"/>
        <result column="is_cash_on_delivery" property="isCashOnDelivery" jdbcType="BIT"/>
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP"/>
        <result column="customer_type" property="customerType" jdbcType="VARCHAR"/>
        <result column="last_sign_time" property="lastSignTime" jdbcType="TIMESTAMP"/>
        <result column="binding_time" property="bindingTime" jdbcType="TIMESTAMP"/>
        <result column="create_type" property="createType" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <association property="storeId" javaType="SimpleStoreParam">
            <id property="storeId" column="store_id"/>
            <result property="storeName" column="store_name"/>
        </association>
        <association property="cityId" javaType="SimpleCityParam">
            <id property="cityId" column="city_id"/>
            <result property="name" column="city_name"/>
        </association>
        <association property="salesConsultId" javaType="SimpleEmployeeParam">
            <id property="empId" column="emp_id"/>
            <result property="name" column="emp_name"/>
        </association>
    </resultMap>


    <select id="findAllVO" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE s.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>
    <select id="queryCustomerVOById" parameterType="java.lang.Long" resultMap="customerVoResultMap">
        SELECT
        c.*,
        ci.`name` as city_name ,
        s.store_name,
        e.`name` as emp_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        LEFT JOIN city ci ON c.city_id = ci.city_id
        LEFT JOIN emp_employee e ON c.sales_consult_id = e.emp_id
        WHERE c.cus_id=#{cusId} ORDER BY c.create_time DESC
    </select>


    <select id="queryCustomerVOByCityId" parameterType="java.lang.Long" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE c.city_id =#{cityId}
        AND
        s.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>

    <select id="queryCustomerVOByStoreId" parameterType="java.lang.Long" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE c.store_id =#{storeId} ORDER BY c.create_time DESC
    </select>

    <select id="queryCustomerVOByGuideId" parameterType="java.lang.Long" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE c.sales_consult_id =#{guideId} ORDER BY c.create_time DESC
    </select>


    <select id="queryCustomerVOByPhone" parameterType="java.lang.Long" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE c.mobile LIKE CONCAT('%',#{queryCusInfo},'%')
        AND
        s.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>


    <select id="queryCustomerVOByName" parameterType="java.lang.String" resultMap="customerVoResultMap">
        SELECT
        c.cus_id,
        c.name,
        c.mobile,
        c.pic_url,
        c.status,
        c.light,
        s.store_name
        FROM
        cus_customer c
        LEFT JOIN st_store s ON c.store_id = s.store_id
        WHERE c.name LIKE CONCAT('%',#{queryCusInfo},'%')
        AND
        s.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>


    <insert id="save" parameterType="cn.com.leyizhuang.app.foundation.pojo.management.customer.CustomerDO">
    INSERT INTO
    cus_customer (
    city_id,store_id,sales_consult_id,name,mobile,birthday,status,sex,open_id,pic_url,nick_name,is_cash_on_delivery,create_time,light,create_type,customer_type,last_sign_time,binding_time)
    VALUES
    (#{cityId.cityId}, #{storeId.storeId}, #{salesConsultId.id}, #{name}, #{mobile}, #{birthday}, #{status}, #{sex},
    #{openId},#{picUrl},#{nickName},#{isCashOnDelivery},#{createTime},#{light},#{createType},#{customerType},#{lastSignTime},#{bindingTime})
  </insert>

    <select id="isExistPhoneNumber" parameterType="java.lang.Long" resultType="boolean">
        SELECT EXISTS(SELECT 1
        FROM cus_customer
        WHERE mobile = #{mobile})
    </select>

    <select id="isExistPhoneNumberByCusId" parameterType="java.lang.Long" resultType="boolean">
        SELECT EXISTS(SELECT 1
        FROM cus_customer
        WHERE mobile = #{mobile}
        AND cus_id != #{cusId})
    </select>

    <select id="findAllCusPredeposit"
            resultType="cn.com.leyizhuang.app.foundation.vo.management.customer.CustomerPreDepositVO">
        SELECT
        c.cus_id, c.name, c.mobile, cp.id, cp.balance, s.store_name
        FROM cus_customer c
        LEFT JOIN cus_pre_deposit cp on cp.cus_id = c.cus_id
        LEFT JOIN st_store s ON s.store_id = c.store_id
        WHERE
        (1 = 1)
        <if test="null != cityId and cityId != -1">
            AND c.city_id = #{cityId}
        </if>
        <if test="null != storeId and storeId != -1">
            AND c.store_id = #{storeId}
        </if>
        <if test="null != keywords and keywords != ''">
            AND (c.name LIKE concat(concat('%',#{keywords}),'%')
            OR c.mobile LIKE concat(concat('%',#{keywords}),'%'))
        </if>
        AND c.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>

    <select id="queryCusPredepositByCusId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.vo.management.customer.CustomerPreDepositVO">
        SELECT
        c.cus_id, c.name, c.mobile, cp.id, cp.balance, s.store_name,cp.last_update_time
        FROM cus_customer c
        LEFT JOIN cus_pre_deposit cp on cp.cus_id = c.cus_id
        LEFT JOIN st_store s ON s.store_id = c.store_id
        WHERE c.cus_id = #{cusId}
    </select>

    <select id="findPreDepositByCusId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.user.CustomerPreDeposit">
        SELECT *
        FROM cus_pre_deposit
        WHERE cus_id = #{cusId}
    </select>

    <insert id="savePreDeposit" parameterType="cn.com.leyizhuang.app.foundation.pojo.user.CustomerPreDeposit">
        INSERT INTO cus_pre_deposit (cus_id, balance, last_update_time, create_time) VALUES (#{cusId}, #{balance}, #{lastUpdateTime}, #{createTime})
    </insert>

    <update id="updateDepositByUserId">
        UPDATE cus_pre_deposit
        SET balance = balance + #{deposit},
        last_update_time = #{lastUpdateTime}
        WHERE cus_id = #{userId}
        <if test="null != oldLastUpdateTime">
            AND last_update_time = #{oldLastUpdateTime}
        </if>
    </update>


    <update id="updateCustomer" parameterType="cn.com.leyizhuang.app.foundation.pojo.management.customer.CustomerDO">
        UPDATE cus_customer
        <set>
            <if test="null != name">
                 name = #{name},
            </if>
            <if test="null != mobile">
                 mobile = #{mobile},
            </if>
            <if test="null != sex">
                 sex = #{sex},
            </if>
            <if test="null != birthday">
                 birthday = #{birthday},
            </if>
        </set>
        WHERE
        cus_id = #{cusId}
    </update>

    <select id="findAllCusLebi" resultType="cn.com.leyizhuang.app.foundation.vo.management.customer.CustomerLebiVO">
        SELECT
        c.cus_id, c.name, c.mobile, b.id, b.quantity, s.store_name
        FROM cus_customer c
        LEFT JOIN cus_lb b on b.cus_id = c.cus_id
        LEFT JOIN st_store s ON s.store_id = c.store_id
        WHERE
        (1 = 1)
        <if test="null != cityId and cityId != -1">
            AND c.city_id = #{cityId}
        </if>
        <if test="null != storeId and storeId != -1">
            AND c.store_id = #{storeId}
        </if>
        <if test="null != keywords and keywords != ''">
            AND (c.name LIKE concat(concat('%',#{keywords}),'%')
            OR c.mobile LIKE concat(concat('%',#{keywords}),'%'))
        </if>
        AND c.store_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY c.create_time DESC
    </select>


    <select id="queryCusLebiByCusId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.vo.management.customer.CustomerLebiVO">
        SELECT
        c.cus_id, c.name, c.mobile, b.id, b.quantity, s.store_name
        FROM cus_customer c
        LEFT JOIN cus_lb b on b.cus_id = c.cus_id
        LEFT JOIN st_store s ON s.store_id = c.store_id
        WHERE c.cus_id = #{cusId}
    </select>

    <select id="findLebiByCusId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.user.CustomerLeBi">
        SELECT *
        FROM cus_lb
        WHERE cus_id = #{cusId}
    </select>

    <insert id="saveLebi" parameterType="cn.com.leyizhuang.app.foundation.pojo.user.CustomerLeBi">
        INSERT INTO cus_lb (cus_id, quantity, last_update_time, create_time) VALUES (#{cusId}, #{quantity}, #{lastUpdateTime}, #{createTime})
    </insert>

    <update id="updateLebiByUserId">
        UPDATE cus_lb
        SET quantity = quantity + #{quantity},
        last_update_time = #{lastUpdateTime}
        WHERE cus_id = #{userId}
        <if test="null != oldLastUpdateTime">
            AND last_update_time = #{oldLastUpdateTime}
        </if>
    </update>

    <select id="findCustomerByCityIdAndStoreId" resultMap="customerVoResultMap">
        SELECT
        cus_id,
        `name`,
        mobile,
        customer_type
        FROM
        cus_customer
        WHERE
        1 = 1
        <if test="list != null">
            AND store_id IN
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="findCustomerByCityIdAndStoreIdAndCustomerNameAndCustomerPhone" resultMap="customerVoResultMap">
        SELECT
        cus_id,
        `name`,
        mobile,
        customer_type
        FROM
        cus_customer
        WHERE
        1 = 1
        <if test="customerQueryConditions != null and customerQueryConditions != ''">
            AND (`name` LIKE CONCAT('%' ,#{customerQueryConditions},'%') OR mobile LIKE CONCAT('%'
            ,#{customerQueryConditions},'%') )
        </if>
        <if test="list != null">
            AND store_id IN
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="findCustomerByCustomerPhone" resultMap="customerVoResultMap">
        SELECT
        cus_id,
        `name`,
        mobile,
        customer_type
        FROM
        cus_customer
        WHERE
        mobile = #{customerQueryConditions}
    </select>

    <select id="findCustomerByLightAndStatusTrue"
            resultType="cn.com.leyizhuang.app.foundation.pojo.management.customer.CustomerDO">
        select * from cus_customer
        where light = #{light}
        and status = TRUE ;
    </select>

    <!--改变灯号-->
    <update id="updateLight">
        UPDATE cus_customer
        set light = #{light}
        where cus_id in
        <foreach collection="cusIdList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="updateDepositByUserIdAndVersion">
        UPDATE cus_pre_deposit
        SET balance = #{deposit}
        WHERE cus_id = #{userId}
        AND last_update_time = #{version}
    </update>

    <insert id="saveCusPreDepositLog"
            parameterType="cn.com.leyizhuang.app.foundation.pojo.management.customer.MaCustomerPreDeposit">
        INSERT INTO cus_pre_deposit_log (create_time, change_money, remarks, change_type, change_type_desc, cus_id, operator_id, operator_type, operator_ip, order_number, balance,
        detail_reason, transfer_time, merchant_order_number)
        VALUES (#{createTime}, #{changeMoney}, #{remarks}, #{changeType}, #{changeTypeDesc}, #{cusId},
        #{operatorId}, #{operatorType}, #{operatorIp}, #{orderNumber}, #{balance},
        #{detailReason}, #{transferTime}, #{merchantOrderNumber})
    </insert>

    <select id="findCityIdByCusId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT city_id FROM cus_customer WHERE cus_id = #{cusId}
    </select>

    <select id="findCustomerById" parameterType="java.lang.Long" resultType="cn.com.leyizhuang.app.foundation.pojo.response.ManageUpdateCustomerTypeResponse">
           SELECT
                cc.cus_id cusId,
                cc. NAME `name`,
                cc.mobile phone,
                cc.birthday birthday,
                CASE
                WHEN cc.sex = 'MALE' THEN '男'
                WHEN cc.sex = 'FEMALE' THEN '女'
                ELSE '保密'
                END
                    sex,
                CASE
                WHEN r.rank_code = 'A' THEN 'A'
                WHEN r.rank_code = 'B' THEN 'B'
                WHEN r.rank_code = 'C' THEN 'A'
                WHEN r.rank_code = 'D' THEN 'B'
                ELSE 'COMMON' END
                    memberType
            FROM
                cus_customer cc
            LEFT JOIN cus_rank cr ON cr.cus_id = cc.cus_id
            LEFT JOIN rank_classification r ON cr.rank_id = r.rank_id
            WHERE
                cc.cus_id = #{id}
    </select>

    <select id="findRankAll" resultType="cn.com.leyizhuang.app.foundation.pojo.user.RankClassification">
            SELECT
                rank_id rankId,
                rank_name rankName,
                rank_code rankCode,
                rank_url rankUrl,
                create_time createTime,
                city_id cityId
            FROM
                rank_classification
    </select>

    <select id="findStoreByCusId" parameterType="java.lang.Long" resultType="cn.com.leyizhuang.app.foundation.pojo.RankStore">
        SELECT
        s.id id,
        s.store_id storeId,
        s.store_name storeCode,
        s.store_code storeName,
        s.company_code companyCode,
        s.city_id cityId,
        s.city_name cityName,
        s.company_name companyName,
        s.create_time createTime
        FROM
        cus_customer cc
        LEFT JOIN cus_rank c ON c.cus_id = cc.cus_id
        LEFT JOIN rank_store s ON s.store_id = cc.store_id
        WHERE
        cc.cus_id = #{cusId}
    </select>

    <update id="updateMemberTypeByRankIdAndCusId">
        UPDATE cus_rank
        SET rank_id = #{rankId}
        WHERE
            cus_id = #{cusId}
    </update>

    <insert id="saveRankStore" parameterType="cn.com.leyizhuang.app.foundation.pojo.RankStore">
        INSERT INTO rank_store (
            store_id, store_code, store_name, city_id, city_name, company_code, company_name, create_time
        )
        VALUES
            (storeId, storeCode, storeName, cityId, cityName, companyCode, companyName, createTime)
    </insert>

    <insert id="saveCusRank" parameterType="cn.com.leyizhuang.app.foundation.pojo.user.CusRankDO">
           INSERT INTO cus_rank
                (rank_id,cus_id,number,create_time)
           VALUES
                (#{rankId},#{cusId},#{number},#{createTime})
    </insert>

    <select id="findCusRankByCusId" parameterType="java.lang.Long" resultType="cn.com.leyizhuang.app.foundation.pojo.user.CusRankDO">
        SELECT
            *
        FROM
            cus_rank
        WHERE
            cus_id = #{cusId}
        GROUP BY
            cus_id
    </select>

    <select id="findRankClassificationByRankCode" resultType="cn.com.leyizhuang.app.foundation.pojo.user.RankClassification">
        SELECT
        rank_id rankId,
        rank_name rankName,
        rank_code rankCode,
        rank_url rankUrl,
        create_time createTime,
        city_id cityId
        FROM
        rank_classification
        WHERE
        rank_code = #{rankCode}
    </select>
</mapper>