<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.MaMaterialListDAO">

    <select id="findByUserIdAndIdentityTypeAndGoodsId"
            resultType="cn.com.leyizhuang.app.foundation.pojo.MaterialListDO">
        SELECT *
        FROM
        material_list
        WHERE user_id = #{userId}
        AND identity_type = #{identityType}
        AND gid = #{goodsId}
        AND audit_no IS NULL
        AND cus_id IS NULL
        AND (material_list_type = 'NORMAL' OR material_list_type IS NULL)
    </select>

    <insert id="batchSave" parameterType="java.util.List">
        INSERT INTO material_list
        (user_id, identity_type,cus_id, gid, sku, sku_name, goods_specification, cover_image_uri, goods_unit, qty,
        audit_no,
        material_list_type,delivery_id,remark,is_generate_order)
        VALUES
        <foreach collection="list" item="materialListDO" separator=",">
            (#{materialListDO.userId}, #{materialListDO.identityType}, #{materialListDO.cusId},#{materialListDO.gid},
            #{materialListDO.sku},#{materialListDO.skuName}, #{materialListDO.goodsSpecification},
            #{materialListDO.coverImageUri},
            #{materialListDO.goodsUnit}, #{materialListDO.qty},
            #{materialListDO.auditNo},#{materialListDO.materialListType},#{materialListDO.deliveryId},#{materialListDO.remark},#{materialListDO.isGenerateOrder})
        </foreach>
    </insert>

    <update id="modifyQty">
        UPDATE material_list
        SET qty = #{qty},
            delivery_id = #{deliveryId},
            is_generate_order = #{isGenerateOrder},
            user_id = #{userId},
            identity_type = #{identityType}
        WHERE id = #{id}
    </update>

    <update id="updateRemarkAndDeliveryId">
        UPDATE material_list
        SET remark = #{remark},
         delivery_id = #{deliveryId}
        WHERE
            user_id = #{userId}
        AND identity_type = #{identityType}
    </update>

    <select id="findMaPhotoOrderMaterialListByPhotoNumber" resultType="cn.com.leyizhuang.app.foundation.pojo.MaterialListDO">
        SELECT
            ml.*
        FROM
            photo_order po
        LEFT JOIN material_list ml ON po.user_id = ml.user_id
        AND po.identity_type = ml.identity_type
        WHERE
            po.photo_order_no = #{photoNo}
        AND is_generate_order = 'N'
    </select>

    <select id="findMaAllMaterialListByPhotoNumber" resultType="cn.com.leyizhuang.app.foundation.pojo.response.materialList.MaUpdateMaterialResponse">
      <if test="null != identityType and 'CUSTOMER' == identityType">
       SELECT
            ml.user_id,
            ml.identity_type,
            ml.gid,
            ml.sku,
            ggp.retail_price,
            gg.type_name,
            gg.sku_name,
            ml.material_list_type,
            ml.qty,
            ml.is_generate_order,
            po.proxy_id
        FROM
            photo_order po
        LEFT JOIN material_list ml ON po.user_id = ml.user_id
        AND po.identity_type = ml.identity_type
        INNER JOIN cus_customer cc ON cc.cus_id = ml.user_id
        INNER JOIN gds_goods_price ggp ON ggp.sku = ml.sku AND ggp.store_id = cc.store_id
        INNER JOIN gds_goods gg ON gg.gid = ggp.gid
        WHERE
            po.photo_order_no = #{photoNo}
          <choose>
              <when test="rankCode !=null and rankCode != ''">
                  AND
                  ggp.price_type =#{rankCode}
              </when>
              <otherwise>
                  ggp.price_type ='COMMON'
              </otherwise>
          </choose>
      </if>
      <if test="null != identityType and 'OTHER' == identityType">
          SELECT
          ml.user_id,
          ml.identity_type,
          ml.gid,
          ml.sku,
          ggp.retail_price,
          gg.type_name,
          gg.sku_name,
          ml.material_list_type,
          ml.qty,
          ml.is_generate_order,
          po.proxy_id
          FROM
          photo_order po
          LEFT JOIN material_list ml ON po.user_id = ml.user_id
          AND po.identity_type = ml.identity_type
          INNER JOIN emp_employee ee ON ee.emp_id = ml.user_id
          INNER JOIN gds_goods_price ggp ON ggp.sku = ml.sku AND ggp.store_id = ee.store_id
          INNER JOIN gds_goods gg ON gg.gid = ggp.gid
          WHERE
          po.photo_order_no = #{photoNo}
      </if>
    </select>

    <select id="findProxyMaterialListByPhotoNumber" resultType="cn.com.leyizhuang.app.foundation.pojo.response.materialList.MaUpdateMaterialResponse">
        SELECT
            ml.user_id,
            ml.identity_type,
            ml.gid,
            ml.sku,
            ggp.retail_price,
            gg.type_name,
            gg.sku_name,
            ml.material_list_type,
            ml.qty,
            ml.is_generate_order
        FROM
            material_list ml
            INNER JOIN emp_employee ee ON ee.emp_id = ml.user_id
            INNER JOIN gds_goods_price ggp ON ggp.sku = ml.sku AND ggp.store_id = ee.store_id
            INNER JOIN gds_goods gg ON gg.gid = ggp.gid
        WHERE
            ml.user_id = #{userid}
            AND ml.identity_type = #{identityType}
    </select>

    <delete id="deleteMaterialListByUserIdAndIdentityTypeAndGoodsSku">
        DELETE FROM material_list
        WHERE user_id = #{userId}
        AND identity_type = #{identityType}
        AND sku = #{sku}
        AND material_list_type != 'COUPON_TRANSFORM'
    </delete>
    
    <insert id="saveMaterialChangeHeadLog" parameterType="cn.com.leyizhuang.app.foundation.pojo.management.MaterialChangeHeadLog"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ma_material_change_head_log
        (user_id, identity_type, create_time, update_people_id)
        VALUES
        (#{userId}, #{identityType}, #{createTime}, #{updatePeopleId})
    </insert>

    <insert id="saveMaterialChangeDetailLog" parameterType="cn.com.leyizhuang.app.foundation.pojo.management.MaterialChangeDetailLog">
        INSERT INTO ma_material_change_detail_log
        (gid, sku, sku_name, qty, update_head_id)
        VALUES
        (#{gid}, #{sku}, #{skuName}, #{qty}, #{updateHeadId})
    </insert>

</mapper>