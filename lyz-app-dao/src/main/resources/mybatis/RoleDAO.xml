<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.RoleDAO">

    <select id="selectResourceListByRoleId" resultType="java.util.HashMap" parameterType="java.lang.Long">
        SELECT
            rr.id  AS id,
            rs.url AS url
        FROM admin_role r LEFT JOIN admin_role_resource rr ON r.rid = rr.rid
            LEFT JOIN admin_resource rs ON rr.rs_id = rs.rs_id
        WHERE r.rid = #{id};
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultType="Role">
        SELECT
            rid id,
            name,
            description,
            status,
            sort_id
        FROM admin_role
        WHERE rid = #{roleId};
    </select>

    <select id="queryList" resultType="Role">
        SELECT
            rid id,
            name,
            description,
            status,
            sort_id
        FROM admin_role
    </select>

    <insert id="save" parameterType="Role">
        INSERT INTO admin_role (NAME, sort_id, DESCRIPTION, STATUS)
        VALUES (#{name}, #{sortId}, #{description}, #{status})
    </insert>
    <select id="findAllResource" resultType="ResourceVO">
        SELECT
            r.rs_id        id,
            r.name         resource_name,
            r.DESCRIPTION  resource_description,
            pr.rs_id       parent_resource_id,
            pr.name        parent_resource_name,
            pr.DESCRIPTION parent_resource_description
        FROM
            admin_resource r
            LEFT JOIN admin_resource pr ON r.PID = pr.rs_id
        WHERE
            r.PID != 0
    </select>

    <delete id="batchRemove" parameterType="java.util.List">
        DELETE FROM admin_role WHERE rid IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="queryById" parameterType="java.lang.Long" resultType="Role">
        SELECT
            rid id,
            name,
            description,
            status,
            sort_id
        FROM admin_role
        WHERE rid = #{id}
    </select>

    <update id="update" parameterType="Role">
        UPDATE admin_role
        <set>
            <if test="null != name">
                NAME = #{name},
            </if>
            <if test="null != description">
                DESCRIPTION = #{description},
            </if>
            <if test="null != sortId">
                sort_id = #{sortId},
            </if>
            <if test="null != status">
                STATUS = #{status},
            </if>
        </set>
        WHERE rid = #{id}
    </update>

    <select id="findByStatus" parameterType="java.lang.Boolean" resultType="Role">
        SELECT
            rid id,
            name,
            description,
            status,
            sort_id
        FROM admin_role
        WHERE STATUS = #{status};
    </select>

    <select id="selectResourceListByRoleIdListAndResourceType" resultType="Resource">
        SELECT
        s.rs_id,
        s.NAME name,
        s.URL url,
        s.DESCRIPTION description,
        s.ICON icon,
        s.PID pid,
        s.sort_id,
        s.STATUS status,
        s.RESOURCE_TYPE resource_type,
        s.CREATE_TIME create_time
        FROM admin_role r
        LEFT JOIN admin_role_resource rs ON r.rid = rs.rid
        LEFT JOIN admin_resource s ON rs.rs_id = s.rs_id
        WHERE r.rid IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND s.resource_type = #{resourceType}
        ORDER BY s.sort_id
    </select>

</mapper>