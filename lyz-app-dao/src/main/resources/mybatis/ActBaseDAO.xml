<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.ActBaseDAO">


    <sql id="ALL_FIELDS">
        id, create_time, title, begin_time, end_time, city_id, city_name, act_target,
    base_type, promotion_type, condition_type, is_double, gift_choose_number, full_amount,
    full_number,is_returnable,sort_id,status,act_code,add_amount,is_gcorder,is_goods_optional_qty,is_gift_optional_qty,pic_url,rank_code,scope,is_member_conference
    </sql>

    <insert id="save" parameterType=
            "cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO act_base (
         create_time, title, begin_time, end_time, city_id, city_name,  act_target,
    base_type, promotion_type, condition_type, is_double, gift_choose_number, full_amount,
    full_number,is_returnable,sort_id,status,act_code,add_amount,is_gcorder,is_goods_optional_qty,is_gift_optional_qty,pic_url,rank_code,scope,is_member_conference
        )
        VALUES
        (
         #{createTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR},
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{cityId,jdbcType=BIGINT},
      #{cityName,jdbcType=VARCHAR}, #{actTarget,jdbcType=VARCHAR},
      #{baseType,jdbcType=VARCHAR}, #{promotionType,jdbcType=VARCHAR}, #{conditionType,jdbcType=VARCHAR},
      #{isDouble,jdbcType=BIT}, #{giftChooseNumber,jdbcType=INTEGER}, #{fullAmount,jdbcType=DECIMAL},
      #{fullNumber,jdbcType=INTEGER},#{isReturnable,jdbcType=BIT},#{sortId,jdbcType=INTEGER},#{status,jdbcType=VARCHAR},
      #{actCode,jdbcType=VARCHAR},#{addAmount,jdbcType=DECIMAL},#{isGcOrder,jdbcType=BIT},#{isGoodsOptionalQty,jdbcType=BIT},#{isGiftOptionalQty,jdbcType=BIT}
      ,#{picUrl},#{rankCode},#{scope},#{isMemberConference}
        )

    </insert>

    <insert id="saveMemberConference" parameterType="cn.com.leyizhuang.app.foundation.pojo.activity.ActMemberConference" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO act_member_conference (cus_id,act_id,create_time,update_time )
        VALUES ( #{cusId}, #{actId},#{createTime}, #{updateTime})
    </insert>

    <select id="findCustomer" resultType="cn.com.leyizhuang.app.foundation.pojo.user.AppCustomer">
        SELECT
            cc.cus_id cusId,
            cc.`name` `name`,
            cc.mobile mobile
        FROM
            cus_customer cc
        LEFT JOIN act_member_conference amc ON amc.cus_id = cc.cus_id
        WHERE
            amc.act_id = #{actId}
    </select>

    <select id="findMemberConferenceByCusId" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActMemberConference">
        SELECT
            id id,
            cus_id cusId,
            act_id actId,
            create_time createTime,
            update_time updateTime
        FROM
            act_member_conference
        WHERE
            cus_id = #{cusId};
    </select>
    <select id="findMemberConferenceByActId" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActMemberConference">
        SELECT
            id id,
            cus_id cusId,
            act_id actId,
            create_time createTime,
            update_time updateTime
        FROM
            act_member_conference
        WHERE
            act_id = #{actId};
    </select>

    <update id="update" parameterType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        UPDATE act_base
        <set>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null" >
                begin_time = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cityId != null" >
                city_id = #{cityId,jdbcType=BIGINT},
            </if>
            <if test="cityName != null" >
                city_name = #{cityName,jdbcType=VARCHAR},
            </if>

            <if test="actTarget != null" >
                act_target = #{actTarget,jdbcType=VARCHAR},
            </if>
            <if test="baseType != null" >
                base_type = #{baseType,jdbcType=VARCHAR},
            </if>
            <if test="promotionType != null" >
                promotion_type = #{promotionType,jdbcType=VARCHAR},
            </if>
            <if test="conditionType != null" >
                condition_type = #{conditionType,jdbcType=VARCHAR},
            </if>
            <if test="isDouble != null" >
                is_double = #{isDouble,jdbcType=BIT},
            </if>
            <if test="giftChooseNumber != null" >
                gift_choose_number = #{giftChooseNumber,jdbcType=INTEGER},
            </if>
            <if test="fullAmount != null" >
                full_amount = #{fullAmount,jdbcType=DECIMAL},
            </if>
            <if test="fullNumber != null" >
                full_number = #{fullNumber,jdbcType=INTEGER},
            </if>
            <if test="isReturnable != null">
                is_returnable = #{isReturnable,jdbcType=BIT},
            </if>
            <if test="sortId != null" >
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="actCode != null">
                act_code = #{actCode,jdbcType=VARCHAR},
            </if>
            <if test="addAmount != null">
                add_amount = #{addAmount,jdbcType=VARCHAR},
            </if>
            <if test="isGcOrder != null">
                is_gcorder = #{isGcOrder,jdbcType=BIT},
            </if>
            <if test="isGoodsOptionalQty != null">
                is_goods_optional_qty = #{isGoodsOptionalQty,jdbcType=BIT},
            </if>
            <if test="isGiftOptionalQty != null">
                is_gift_optional_qty = #{isGiftOptionalQty,jdbcType=BIT},
            </if>
            <if test="rankCode != null">
                rank_code = #{rankCode},
            </if>
            <if test="scope != null">
                scope = #{scope},
            </if>
            <if test="isMemberConference != null">
                is_member_conference = #{isMemberConference},
            </if>
        </set>
        WHERE
        id = #{id}
    </update>

    <select id="queryById" parameterType="java.lang.Long" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base WHERE ID = #{id}
    </select>

    <select id="queryByIdList" parameterType="java.lang.Long" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base WHERE ID IN
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>

        ORDER BY sort_id
    </select>

    <select id="queryList" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base
    </select>

    <select id="queryByKeywords" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base
        WHERE
        1=1
        <if test="keywords != null">
           AND  title LIKE concat("%",#{keywords},"%")
        </if>
        <if test="null != cityId and -1 !=cityId">
            and city_id = #{cityId}
        </if>
        <if test="status == ''">
            AND status != "INVALID"
            ORDER BY create_time DESC
        </if>

        <if test="status == 'NEW'">
            and status = #{status}
            ORDER BY create_time DESC
        </if>
        <if test="status == 'PUBLISH'">
            and status = #{status}
            ORDER BY create_time DESC
        </if>

    </select>

    <select id="queryListBySkus" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base b
        LEFT JOIN
        (SELECT  DISTINCT s.act_id from act_stores s RIGHT JOIN
        (SELECT DISTINCT act_id from act_goods_mapping
        where sku in
        <foreach collection="skus" item="sku" index="index" open="(" close=")" separator=",">
            #{sku}
        </foreach>
        ) g on s.act_id = g.act_id
        where s.store_id = #{storeId}) st
        ON b.id = st.act_id
        where
        b.begin_time &lt; #{now} and b.end_time &gt; #{now}
        and b.city_id = #{cityId}
        AND  b.act_target LIKE concat("%",#{actTarget},"%")
        AND st.act_id is NOT NULL
        AND b.status = 'PUBLISH'
        AND (b.scope = #{scope} OR b.scope = 'ALL')
        ORDER BY b.sort_id
    </select>

    <select id="queryZgFirstListByRankCode" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base b
        LEFT JOIN
        (SELECT  DISTINCT s.act_id from act_stores s RIGHT JOIN
        (SELECT DISTINCT act_id from act_goods_mapping
        where sku in
        <foreach collection="skus" item="sku" index="index" open="(" close=")" separator=",">
            #{sku}
        </foreach>
        ) g on s.act_id = g.act_id
        where s.store_id = #{storeId}) st
        ON b.id = st.act_id
        where
        b.begin_time &lt; #{now} and b.end_time &gt; #{now}
        and b.city_id = #{cityId}
        AND st.act_id is NOT NULL
        AND b.status = 'PUBLISH'
        and b.rank_code = #{rankCode}
        AND (b.scope = #{scope} OR b.scope = 'ALL')
        ORDER BY b.sort_id
    </select>

    <select id="queryListByActIdsAndEndTime" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base
        where id IN
        <foreach collection="actIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and end_time &lt; #{now}

    </select>

    <select id="queryListByActBaseType" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base
        where
        base_type = #{baseType}
        and end_time &gt; #{now}
    </select>

    <select id="queryZgList" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base a
        where
        a.base_type = 'ACCUMULATE'
        and a.end_time &gt; #{now}
        and a.status = 'PUBLISH'
        and a.city_id = #{cityId}
    </select>

    <select id="queryZgFirstList" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base a
        where
        a.base_type = 'ZGFRIST'
        and a.end_time &gt; #{now}
        and a.status = 'PUBLISH'
        and a.city_id = #{cityId}
    </select>

    <select id="queryValidListByStoreId" resultType="cn.com.leyizhuang.app.foundation.pojo.activity.ActBaseDO">
        SELECT
        <include refid="ALL_FIELDS"/>
        FROM act_base a RIGHT JOIN (SELECT  DISTINCT act_id FROM  act_stores  where store_id = #{storeId}) s ON a.id = s.act_id
        where a.status = 'PUBLISH' and a.end_time &gt; #{now} and base_type = 'COMMON'
    </select>

    <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
    <selectKey resultType="long" keyProperty="id" order="AFTER">
        SELECT
        LAST_INSERT_ID()
    </selectKey>
    insert into act_base (create_time, title, begin_time, end_time, city_id, city_name, act_target,
    base_type, promotion_type, condition_type, is_double, gift_choose_number, full_amount,
    full_number,sort_id)
    values
    <foreach collection="list" item="item" index="index" separator="," >
        (#{item.createTime,jdbcType=TIMESTAMP}, #{item.title,jdbcType=VARCHAR},
        #{item.beginTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP}, #{item.cityId,jdbcType=BIGINT},
        #{item.cityName,jdbcType=VARCHAR}, #{item.actTarget,jdbcType=VARCHAR},
        #{item.baseType,jdbcType=VARCHAR}, #{item.promotionType,jdbcType=VARCHAR}, #{item.conditionType,jdbcType=VARCHAR},
        #{item.isDouble,jdbcType=BIT}, #{item.giftChooseNumber,jdbcType=INTEGER}, #{item.fullAmount,jdbcType=DECIMAL},
        #{item.fullNumber,jdbcType=INTEGER},#{item.sortId,jdbcType=INTEGER})
    </foreach>
</insert>
    <delete id="deleteMemberConferenceByActBaseId">
        DELETE
        FROM
            act_member_conference
        WHERE
            act_id = #{actId}
    </delete>

</mapper>