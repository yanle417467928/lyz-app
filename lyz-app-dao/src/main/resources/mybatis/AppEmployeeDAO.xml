<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.AppEmployeeDAO">

    <insert id="save" parameterType="AppEmployee">
        INSERT INTO emp_employee (login_name, name, password, salt, identity_type, mobile, birthday,
                                  status, sex, pic_url, city_id, store_id, manager_id, create_time
        ) VALUES (
            #{loginName}, #{name}, #{password}, #{salt},
                          #{identityType,
javaType=cn.com.leyizhuang.app.core.constant.AppIdentityType,
typeHandler=org.apache.ibatis.type.EnumTypeHandler},
                          #{mobile}, #{birthday}, #{status},
                          #{sex,
javaType=cn.com.leyizhuang.app.core.constant.SexType,
typeHandler=org.apache.ibatis.type.EnumTypeHandler},
                          #{picUrl}, #{cityId}, #{storeId}, #{managerId}, #{createTime}
        )
    </insert>
    <select id="findByLoginName" parameterType="java.lang.String" resultType="AppEmployee">
        SELECT *
        FROM emp_employee
        WHERE login_name = #{loginName}
    </select>
    <select id="findByMobile" parameterType="java.lang.String" resultType="AppEmployee">
        SELECT *
        FROM emp_employee
        WHERE mobile = #{mobile}
    </select>
    <update id="update" parameterType="AppEmployee">
        UPDATE emp_employee
        <set>
            <if test="null != name">
                name = #{name},
            </if>
            <if test="null != password">
                password = #{password},
            </if>
            <if test="null != salt">
                salt = #{salt},
            </if>
            <if test="null != identityType">
                identity_type = #{identityType},
            </if>
            <if test="null != mobile">
                mobile = #{mobile},
            </if>
            <if test="null != birthday">
                birthday = #{birthday},
            </if>
            <if test="null != status">
                status = #{status},
            </if>
            <if test="null != sex">
                sex = #{sex,
                javaType=cn.com.leyizhuang.app.core.constant.SexType,
                typeHandler=org.apache.ibatis.type.EnumTypeHandler},
            </if>
            <if test="null != picUrl">
                pic_url = #{picUrl},
            </if>
            <if test="null != cityId">
                city_id = #{cityId},
            </if>
            <if test="null != storeId">
                store_id = #{storeId},
            </if>
            <if test="null != managerId">
                manager_id = #{managerId},
            </if>
        </set>
        WHERE emp_id = #{empId}
    </update>
    <select id="findByUserId" parameterType="java.lang.Long" resultType="AppEmployee">
        SELECT *
        FROM emp_employee
        WHERE emp_id = (SELECT c.sales_consult_id
                        FROM cus_customer c
                        WHERE c.cus_id = #{userId})
    </select>
    <select id="findById" parameterType="java.lang.Long" resultType="AppEmployee">
        SELECT *
        FROM emp_employee
        WHERE emp_id = #{userId}
    </select>

    <select id="findByIdAndStatusIsTrue" parameterType="java.lang.Long" resultType="AppEmployee">
        SELECT *
        FROM emp_employee
        WHERE emp_id = #{userId} AND status IS TRUE
    </select>

    <select id="findDecorateEmployeeListByManagerId" parameterType="java.lang.Long"
            resultType="AppEmployee">
        SELECT
            e.emp_id,
            e.name,
            e.mobile,
            e.pic_url,
            e.create_time
        FROM emp_employee e
        WHERE e.identity_type = 'DECORATE_EMPLOYEE'
              AND e.manager_id = #{userId}
    </select>

    <select id="searchBySalesConsultIdAndKeywords"
            resultType="AppEmployee">
        SELECT
            e.emp_id,
            e.name,
            e.mobile,
            e.pic_url,
            e.create_time
        FROM emp_employee e
        WHERE e.identity_type = 'DECORATE_EMPLOYEE'
              AND e.manager_id = #{userId}
              AND (
                  e.name LIKE concat('%', #{keywords}, '%')
                  OR e.mobile LIKE concat('%', #{keywords}, '%')
              )
    </select>

    <select id="findCreditMoneyBalanceByUserId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellerCreditMoneyResponse">
        SELECT
            credit_limit           limitBalance,
            credit_limit_available availableBalance,
            temp_credit_limit      tempBalance
        FROM emp_credit_money
        WHERE emp_id = #{userId}
    </select>

    <select id="findEmployeeInfoByUserIdAndIdentityType" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.response.EmployeeHomePageResponse">
        SELECT
        e.pic_url,
        e.city_id,
        e.login_name number,
        e.mobile,
        <if test="type == 0">
            ecm.credit_limit_available balance,
        </if>
        <if test="type == 2">
            pd.balance,
        </if>
        e.name
        FROM
        emp_employee e
        <choose>
            <when test="type == 0">
                LEFT JOIN emp_credit_money ecm ON ecm.emp_id = e.emp_id
            </when>
            <when test="type == 2">
                LEFT JOIN st_store st on e.store_id = st.store_id
                LEFT JOIN st_pre_deposit pd ON pd.store_id = st.store_id
            </when>
        </choose>
        WHERE
        e.emp_id = #{userId}
    </select>

    <update id="updateEmployeeMobileByUserId">
        UPDATE
            emp_employee
        SET
            mobile = #{mobile}
        WHERE
            emp_id = #{userId}
    </update>

    <select id="existsSellerCreditByUserId" parameterType="java.lang.Long" resultType="java.lang.Boolean">
        SELECT emp_credit_money.is_active
        FROM emp_credit_money
        WHERE emp_id = #{userId}
    </select>

    <update id="lockGuideCreditByUserIdAndGuideCredit">
        UPDATE
            emp_credit_money
        SET
            credit_limit_available = credit_limit_available - #{credit}
        WHERE
            emp_id = #{userId}
            AND last_update_time = #{version}
    </update>

    <update id="updateByLoginName" parameterType="AppEmployee">
        UPDATE emp_employee
        <set>
            <if test="null != name">
                name = #{name},
            </if>
            <if test="null != password">
                password = #{password},
            </if>
            <if test="null != salt">
                salt = #{salt},
            </if>
            <if test="null != identityType">
                identity_type = #{identityType},
            </if>
            <if test="null != mobile">
                mobile = #{mobile},
            </if>
            <if test="null != birthday">
                birthday = #{birthday},
            </if>
            <if test="null != status">
                status = #{status},
            </if>
            <if test="null != sex">
                sex = #{sex,
                javaType=cn.com.leyizhuang.app.core.constant.SexType,
                typeHandler=org.apache.ibatis.type.EnumTypeHandler},
            </if>
            <if test="null != picUrl">
                pic_url = #{picUrl},
            </if>
            <if test="null != cityId">
                city_id = #{cityId},
            </if>
            <if test="null != storeId">
                store_id = #{storeId},
            </if>
            <if test="null != managerId">
                manager_id = #{managerId},
            </if>
        </set>
        WHERE login_name = #{loginName}
    </update>

    <delete id="deleteByLoginName" parameterType="java.lang.String">
        DELETE FROM emp_employee
        WHERE login_name = #{loginName}
    </delete>

    <update id="unlockGuideCreditByUserIdAndGuideCredit">
        UPDATE
            emp_credit_money
        SET
            credit_limit_available = credit_limit_available + #{credit}
        WHERE
            emp_id = #{userId}
    </update>

    <select id="findSellerByStoreIdAndIdentityType"
            resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellerResponse">
        SELECT
            emp_id sellerId,
            name   sellerName
        FROM emp_employee
        WHERE store_id = #{storeId} AND identity_type = #{type}
    </select>

    <select id="findSellerByEmpId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.SalesConsult">
        SELECT
            name     consultName,
            mobile   consultMobilePhone,
            store_id ascriptionStoreId
        FROM emp_employee
        WHERE emp_id = #{userId}
    </select>

    <select id="findSellerByCustomerId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.SalesConsult">
        SELECT
            name     consultName,
            mobile   consultMobilePhone,
            store_id ascriptionStoreId
        FROM emp_employee
        WHERE emp_id = (SELECT c.sales_consult_id
                        FROM cus_customer c
                        WHERE c.cus_id = #{userId})

    </select>
    <select id="findDeliveryClerkNoByUserId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.user.AppEmployee">
        SELECT delivery_clerk_no
        FROM emp_employee
        WHERE emp_id = #{userId}
    </select>

    <select id="getQrCodeByUserID" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT qr_code qrCode
        FROM
            emp_employee
        WHERE
            identity_type = 'SELLER'
            AND emp_id = #{userID}

    </select>

    <select id="findEmpCreditMoneyByEmpId" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.EmpCreditMoney">
        SELECT
            create_time,
            last_update_time,
            emp_id,
            credit_limit,
            is_active,
            temp_credit_limit,
            credit_limit_available
        FROM emp_credit_money
        WHERE emp_id = #{empId}
    </select>

    <insert id="addEmpCreditMoneyChangeLog"
            parameterType="cn.com.leyizhuang.app.foundation.pojo.EmpCreditMoneyChangeLog">
        INSERT INTO emp_credit_money_change_log (emp_id, create_time, temp_credit_change_id,available_credit_change_id,fixed_credit_change_id,
                                                 reference_number, change_type, change_type_desc, operator_id, operator_type, operator_ip)
        VALUES (#{empId}, #{createTime}, #{tempCreditChangeId}, #{availableCreditChangId},#{fixedCreditChangeId},
                          #{referenceNumber}, #{changeType}, #{changeTypeDesc}, #{operatorId}, #{operatorType},
                #{operatorIp})
    </insert>

    <insert id="saveCreditLimitAvailableChange"  useGeneratedKeys="true" keyProperty="id" parameterType="EmpAvailableCreditMoneyChangeLog">
        insert into emp_available_credit_change_log
        (credit_limit_available_change_amount,credit_limit_available_after_change)
        values
        (#{creditLimitAvailableChangeAmount},#{creditLimitAvailableAfterChange})
    </insert>

    <insert id="saveTempCreditLimitChange"  useGeneratedKeys="true" keyProperty="id" parameterType="EmpTempCreditMoneyChangeLog" >
        insert into emp_temp_credit_change_log
        (temp_credit_limit_change_amount,temp_credit_limit_after_change )
        values
        (#{tempCreditLimitChangeAmount},#{tempCreditLimitAfterChange})
    </insert>


    <select id="isSupervisor" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT
        seller_type
        FROM emp_employee
        WHERE emp_id = #{id}
    </select>

    <update id="unlockGuideCreditByUserIdAndGuideCreditAndVersion">
        UPDATE
        emp_credit_money
        SET
        credit_limit_available = credit_limit_available + #{credit}
        WHERE
        emp_id = #{userId}
        AND last_update_time = #{version}
    </update>
</mapper>