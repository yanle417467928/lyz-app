<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.leyizhuang.app.foundation.dao.SellDetailsDAO">

    <insert id="addOneDetail" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsDO">
    insert into sell_details ( company_id, `year`,
      `month`, store_id, seller_id,seller_name,
      customer_phone, customer_name, number,
      goods_grade, sku, quantity,
      amount, single_rewards ,city_id,goods_line_id,create_time,customer_id,order_subject_type,creator_identity_type,
      creator_id,creator_name,company_flag,goods_line_type,sell_detals_flag,real_time,valid_coupon_qty)
    values ( #{companyId,jdbcType=BIGINT}, #{year,jdbcType=VARCHAR},
      #{month,jdbcType=VARCHAR}, #{storeId,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT},#{sellerName},
      #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR},
      #{goodsGrade,jdbcType=VARCHAR}, #{sku,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER},
      #{amount,jdbcType=DECIMAL}, #{singleRewards,jdbcType=DECIMAL},#{cityId},#{goodsLineId},#{createTime},#{customerId},
      #{orderSubjectType},#{creatorIdentityType},#{creatorId},#{creatorName},#{companyFlag},#{goodsLineType},#{sellDetalsFlag},#{realTime},#{validCouponQty})
    </insert>

    <insert id="addSellDetailsSingle" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsSingleDO" useGeneratedKeys="true" keyProperty="id">
        insert into sell_details_single (id, create_time, updata_time,
        seller_id, seller_name, target_qty,
        finish_qty, finish_chance, flag,
        structure_id, structure_code, structure_name,year, month,target_sales,finish_sales)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{sellerId,jdbcType=BIGINT}, #{sellerName,jdbcType=VARCHAR}, #{targetQty,jdbcType=INTEGER},
        #{finishQty,jdbcType=INTEGER}, #{finishChance,jdbcType=DECIMAL}, #{flag,jdbcType=VARCHAR},
        #{structureId,jdbcType=BIGINT}, #{structureCode,jdbcType=VARCHAR}, #{structureName,jdbcType=VARCHAR},
        #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER},#{targetSales},#{finishSales})
    </insert>

    <insert id="addSellDetailsWeekFinish" parameterType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsWeekFinishResponse" >
        insert into sell_details_week_finish (id, head_id, week,
        start_time, end_time, finish_qty
        )
        values (#{id,jdbcType=INTEGER}, #{headId,jdbcType=INTEGER}, #{week,jdbcType=INTEGER},
        #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{finishQty,jdbcType=INTEGER}
        )
    </insert>

    <insert id="addEmpPerformanceStatisticErrorLog" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsStatisticErrorLog" >
        insert into sell_details_statistic_error_log (id, create_time, seller_id,
        is_dispose, flag, error_msg
        )
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{sellerId,jdbcType=BIGINT},
        #{isDispose,jdbcType=BIT}, #{flag,jdbcType=VARCHAR}, #{errorMsg,jdbcType=LONGVARCHAR}
        )
    </insert>

    <update id="update" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsDO" >
        update sell_details
        <set >
            <if test="companyId != null" >
                company_id = #{companyId,jdbcType=BIGINT},
            </if>
            <if test="year != null" >
                `year` = #{year,jdbcType=INTEGER},
            </if>
            <if test="month != null" >
                `month` = #{month,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="realTime != null">
                real_time = #{realTime},
            </if>
            <if test="cityId != null" >
                city_id = #{cityId,jdbcType=BIGINT},
            </if>
            <if test="storeId != null" >
                store_id = #{storeId,jdbcType=BIGINT},
            </if>
            <if test="sellerId != null" >
                seller_id = #{sellerId,jdbcType=BIGINT},
            </if>
            <if test="sellerName != null" >
                seller_name = #{sellerName,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null" >
                customer_id = #{customerId,jdbcType=BIGINT},
            </if>
            <if test="customerPhone != null" >
                customer_phone = #{customerPhone,jdbcType=VARCHAR},
            </if>
            <if test="customerName != null" >
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="number != null" >
                `number` = #{number,jdbcType=VARCHAR},
            </if>
            <if test="goodsGrade != null" >
                goods_grade = #{goodsGrade,jdbcType=VARCHAR},
            </if>
            <if test="sku != null" >
                sku = #{sku,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null" >
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="singleRewards != null" >
                single_rewards = #{singleRewards,jdbcType=DECIMAL},
            </if>
            <if test="goodsLineId != null" >
                goods_line_id = #{goodsLineId,jdbcType=BIGINT},
            </if>
            <if test="sellDetalsFlag != null" >
                sell_detals_flag = #{sellDetalsFlag,jdbcType=INTEGER},
            </if>
            <if test="orderSubjectType != null" >
                order_subject_type = #{orderSubjectType,jdbcType=VARCHAR},
            </if>
            <if test="creatorIdentityType != null" >
                creator_identity_type = #{creatorIdentityType,jdbcType=VARCHAR},
            </if>
            <if test="creatorId != null" >
                creator_id = #{creatorId,jdbcType=BIGINT},
            </if>
            <if test="creatorName != null" >
                creator_name = #{creatorName,jdbcType=VARCHAR},
            </if>
            <if test="companyFlag != null" >
                company_flag = #{companyFlag,jdbcType=VARCHAR},
            </if>
            <if test="goodsLineType != null" >
                goods_line_type = #{goodsLineType,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateSellDetailsSingle" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsSingleDO" >
        update sell_details_single
        <set >

            <if test="updateTime != null" >
                updata_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sellerName != null" >
                seller_name = #{sellerName,jdbcType=VARCHAR},
            </if>
            <if test="finishQty != null" >
                finish_qty = #{finishQty,jdbcType=INTEGER},
            </if>
            <if test="finishSales != null">
                finish_sales = #{finishSales},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateSellDetailsWeekFinish" parameterType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsWeekFinishResponse" >
        update sell_details_week_finish
        <set >

            <if test="startDate != null" >
                start_time = #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null" >
                end_time = #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="finishQty != null" >
                finish_qty = #{finishQty,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryOneMonthSellDetails" resultType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsDO">
      select * from sell_details where
      `year` = #{year} and `month` = #{month} and company_flag = 'HR'
    </select>

    <select id="getNotPayUpSellDetails" resultType="java.lang.Long">
        SELECT  sd.id from sell_details sd LEFT JOIN ord_billing_details obd on sd.number = obd.ord_no
        where obd.is_pay_up = 0 and sd.sell_detals_flag = 0
    </select>

    <select id="getProductSellDetails" resultType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsDO">
        SELECT * from sell_details where goods_line_type = 'PRODUCT_COUPON' and amount = 0
    </select>

    <delete id="deleteSellDetailsByIdList" parameterType="java.lang.Long">
        DELETE FROM  sell_details where id IN
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteSellDetailsById" parameterType="java.lang.Long">
        DELETE FROM sell_details WHERE id = #{id}
    </delete>
    
    <select id="isExitByNumberAndGoodsLineId" resultType="java.lang.Boolean">
        SELECT EXISTS (
                select 1 from sell_details where `number` = #{number} and goods_line_id = #{lineId}
        )
    </select>

    <select id="getCustomerSellDetailsOrderByCreateTimeDescLimit4" resultType="java.lang.String">
        select DISTINCT `NUMBER` from sell_details
        where customer_id = #{cusId} and seller_id = #{sellerId} and `number` like CONCAT('%', '_XN', '%') and
              create_time > #{dateTime}
        ORDER BY create_time DESC
    </select>

    <select id="getCustomerIsDefaultStoreAndNoSellDetailsOrder" parameterType="java.lang.Long"
            resultType="cn.com.leyizhuang.app.foundation.pojo.user.AppCustomer">

        SELECT *
        FROM cus_customer
        WHERE
            store_id IN (SELECT store_id
                         FROM st_store
                         WHERE is_default = 1 AND city_id = (SELECT city_id
                                                             FROM emp_employee
                                                             WHERE emp_id = #{sellerId}))

            AND cus_id IN (SELECT DISTINCT customer_id
                           FROM sell_details
                           WHERE seller_id = #{sellerId} and `number` like CONCAT('%', '_XN', '%'))
    </select>

    <select id="getSellDetailsFrequencyBycusIdAndSellerIdAndCreateTime" resultType="java.lang.String">
        select DISTINCT `month` from sell_details
        where customer_id = #{cusId} and seller_id = #{sellerId} and `number` like CONCAT('%', '_XN', '%') and
              create_time > #{dateTime}
        GROUP BY NUMBER
        ORDER BY create_time DESC
    </select>

    <select id="recordeErrorLog" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsErrorLogDO">
        INSERT INTO  sell_details_error_log (order_no,record_time,status,error_msg)
        SELECT #{orderNo},#{recordTime},#{status},#{errorMsg} FROM dual
        WHERE not exists (select * from sell_details_error_log
        where order_no = #{orderNo});
    </select>

    <select id="statisticsSellDetailsSingle" resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsResponse">
        SELECT
        seller_id id,
        seller_name `name`,
        target_qty targetQty,
        finish_qty finishQty,
        finish_chance finishChance,
        flag flag,
        target_sales,
        finish_sales
        from sell_details_single
        where `year` = #{year} and `month` = #{month} and flag = #{flag} and seller_id = #{sellerId}
    </select>

    <select id="getWeekFinishDetails" resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsWeekFinishResponse">
        SELECT * from sell_details_week_finish where head_id = #{headId} order by week
    </select>

    <select id="countGDTS" resultType="java.lang.Integer">
        SELECT
        SUM(quantity)
        FROM
            sell_details s
        INNER JOIN gds_goods_grade gg ON s.sku = gg.sku
        WHERE
            s.seller_id = #{sellerId}
        AND gg.structure_code = #{structureCode}
        AND gg.goods_grade = 2
        AND s.sell_detals_flag = #{flag}
        AND s.create_time &gt; #{startTime}
        AND s.create_time &lt; #{endTime}
    </select>

    <select id="countHYS" resultType="java.lang.Long">
        SELECT
        s.customer_id
        from sell_details s INNER JOIN gds_goods_grade gg ON s.sku = gg.sku
        RIGHT JOIN cus_customer c on  s.seller_id = c.sales_consult_id
        where s.seller_id = #{sellerId} and s.create_time > #{startTime} and gg.goods_grade = 2 and gg.structure_code = #{structureCode}
        GROUP BY s.customer_id HAVING SUM(s.quantity * s.amount) > 0;
    </select>

    <select id="countXKF" resultType="java.lang.Long">
        SELECT cid.customer_id from
        (SELECT * from sell_details where create_time &lt; #{firstDay} and create_time &gt; #{halfYearAgoDate}) sd RIGHT JOIN
        (SELECT customer_id FROM sell_details s
        INNER JOIN gds_goods_grade g on s.sku = g.sku
        where
        s.create_time &gt; #{startTime}
        AND s.seller_id = #{sellerId}
        and s.create_time &lt; #{endTime}
        and g.structure_code = #{structureCode}
        and g.goods_grade = 2
        GROUP BY customer_id HAVING SUM( s.amount * s.quantity ) &gt; 0) cid on sd.customer_id = cid.customer_id
        where sd.customer_id is NULL
        GROUP BY cid.customer_id

    </select>

    <select id="countXL" resultType="java.lang.Double">
        SELECT SUM(amount) from sell_details where create_time &gt; #{startTime} and create_time &lt; #{endTime} and seller_id = #{sellerId};
    </select>

    <select id="cusIdFiltration" resultType="java.lang.Long">

        SELECT c.cus_id from cus_customer c
        LEFT JOIN (SELECT * from emp_owned_high_cus where emp_id = #{empId}) eo on c.mobile = eo.cus_phone
        where
        eo.cus_phone is NULL
        AND c.cus_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="isExitSellDetailsSingle" resultType="java.lang.Long">

        SELECT  id from sell_details_single where `year` = #{year} and `month` = #{month} and seller_id = #{sellerId} and flag = #{flag}

    </select>

    <select id="isExitSellDetailsWeek" resultType="java.lang.Long">

        SELECT  id from sell_details_week_finish where head_id = #{headId} and week = #{week}

    </select>

    <select id="getFgsRank"  resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsResponse">
        SELECT
        seller_id id,
        seller_name `name`,
        target_qty targetQty,
        finish_qty finishQty,
        finish_chance finishChance,
        flag flag
        from sell_details_single
        where `year` = #{year} and `month` = #{month} and flag = #{flag} and structure_code = #{structureCode}
        ORDER BY finishQty DESC
        limit 3
    </select>

    <select id="getJtRank"  resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsResponse">
        SELECT
        seller_id id,
        seller_name `name`,
        target_qty targetQty,
        finish_qty finishQty,
        finish_chance finishChance,
        flag flag
        from sell_details_single
        where `year` = #{year} and `month` = #{month} and flag = #{flag}
        ORDER BY finishQty DESC
        limit 3
    </select>

    <update id="updateOrderRecordFlagFalse">
        UPDATE ord_base_info ob LEFT JOIN
        (
            SELECT
            sd.number
            FROM
                sell_details sd
            LEFT JOIN ord_billing_details obd ON sd.number = obd.ord_no
            WHERE
                obd.is_pay_up = 0
            AND sd.sell_detals_flag = 0
            GROUP BY sd.number
        ) a on a.number = ob.ord_no
        SET ob.is_record_sales = 0 where a.number is not NULL
    </update>

    <select id="getGDTSByOrdernumber" resultType="java.lang.Integer">
      SELECT count(oci.id) from ord_coupon_info oci
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og on og.id = ccpc.goods_line_id
        where  oci.ord_no = #{ordNo} and oci.sku = #{sku}
        and((ccpc.get_type = "BUY" and og.goods_line_type = "GOODS") or (oci.purchase_price > 0 and oci.get_type != "MANUAL_GRANT"));
    </select>

    <select id="getGDTSByReturnNo" resultType="java.lang.Integer">
        SELECT count(orpc.id) from ord_return_product_coupon orpc
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = orpc.pcid
        left JOIN ord_goods_info og on og.id = ccpc.goods_line_id
        where  orpc.return_no = #{returnNo} and orpc.sku = #{sku}
        and((ccpc.get_type = "BUY" and og.goods_line_type = "GOODS") or (orpc.purchase_price > 0 and ccpc.get_type != "MANUAL_GRANT"));
    </select>

    <select id="getRecordErrorLog" resultType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsErrorLogDO">
        SELECT  * from sell_details_error_log where status = #{status};
    </select>

    <update id="updateErrorLogStatus" parameterType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsErrorLogDO">
        update sell_details_error_log
        <set>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id}
    </update>

    <sql id="SalesSql">
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '配送' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE wa.end_dt WHEN null THEN '一代数据' ELSE wa.end_dt END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',
        if(og.goods_line_type = "PRODUCT_COUPON" ,oci.purchase_price , (og.order_qty ) * og.return_price ) as
        'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)) ,
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0) ) as 'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        cu2.cus_store_name fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        -- LEFT JOIN gds_goods_grade gp on og.sku = gp.sku
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN (SELECT * from inter_wta_order_shipping_header where send_flag = 1 GROUP BY order_no) wa ON ob.ord_no = wa.order_no
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        left JOIN cus_customer_fx_store_relation cu2 on ob.store_code = cu2.fx_store_code
        WHERE
        ob.`status` IN (
        'PENDING_RECEIVE',
        'FINISHED',
        'REJECTED'
        )
        <if test="null!=startTime">
            AND obd.pay_up_time >= #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[ obd.pay_up_time <= #{endTime} ]]> and wa.end_dt &lt; #{endTime}
        </if>
        and obd.is_pay_up = 1
        and ob.delivery_type = 'HOUSE_DELIVERY'
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        )

        UNION ALL
        <!-- 自提 -->
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '自提' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as
        'orderStatus',
        os.shipping_time as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE os.shipping_time WHEN null THEN '一代数据' ELSE os.shipping_time END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT'
        THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',

        if(og.goods_line_type = "PRODUCT_COUPON" ,purchase_price , (og.order_qty ) * og.return_price )
        as 'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)),
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0) ) as
        'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        cu2.cus_store_name fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_shipping os on ob.oid = os.oid
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        left JOIN cus_customer_fx_store_relation cu2 on ob.store_code = cu2.fx_store_code
        WHERE
        ob.`status` IN (
        'FINISHED'
        )
        <if test="null!=startTime">
            AND obd.pay_up_time >= #{startTime}
        </if>
        <if test="null!=endTime">
            and   <![CDATA[ obd.pay_up_time <= #{endTime}]]> and os.shipping_time &lt; #{endTime}
        </if>
        AND ob.delivery_type = 'SELF_TAKE'
        and obd.is_pay_up = 1
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        )

        UNION ALL

        <!-- 配送 之前结清本月出货 -->
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '配送' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成'
        end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE wa.end_dt WHEN null THEN '一代数据' ELSE wa.end_dt END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as
        'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品'
        WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',
        if(og.goods_line_type = "PRODUCT_COUPON" ,purchase_price , (og.order_qty ) *
        og.return_price ) as 'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)),
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0)
        ) as 'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        cu2.cus_store_name fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN (SELECT * from inter_wta_order_shipping_header where send_flag = 1 GROUP BY order_no) wa ON ob.ord_no = wa.order_no
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        left JOIN cus_customer_fx_store_relation cu2 on ob.store_code = cu2.fx_store_code
        WHERE
        ob.`status` IN (
        'PENDING_RECEIVE',
        'FINISHED',
        'REJECTED'
        )
        <if test="null!=startTime">
            AND wa.end_dt >= #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[wa.end_dt <= #{endTime} ]]>
        </if>

        <if test="null!=startTime">
            and
            <![CDATA[ obd.pay_up_time < #{startTime} ]]>
        </if>
        and ob.delivery_type = 'HOUSE_DELIVERY'
        and obd.is_pay_up = 1
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        )

        UNION ALL

        <!-- 自提 之前结清本月出货 -->
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '自提' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN
        'FINISHED' THEN '已完成' end as 'orderStatus',
        os.shipping_time as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE os.shipping_time WHEN null THEN '一代数据' ELSE
        os.shipping_time END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as
        'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time
        end as 'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN
        'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',

        if(og.goods_line_type = "PRODUCT_COUPON" ,purchase_price ,
        (og.order_qty ) * og.return_price ) as 'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)),
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0)
        ) as 'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE
        og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        '' fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_shipping os on ob.oid = os.oid
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku =oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        WHERE
        ob.`status` IN (
        'FINISHED'
        )
        <if test="null!=startTime">
            AND os.shipping_time >= #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[ os.shipping_time <= #{endTime} ]]>
        </if>
        <if test="null!=startTime ">
            and  <![CDATA[ obd.pay_up_time < #{startTime}]]>
        </if>
        AND ob.delivery_type = 'SELF_TAKE'
        and obd.is_pay_up = 1
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        )

        UNION ALL

        <!-- 配送 退货 -->
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        CASE ob.delivery_type when 'HOUSE_DELIVERY' then '配送' WHEN 'SELF_TAKE' THEN '自提' end as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        wro.c_end_dt as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        org.sku as 'sku',
        org.sku_name as 'skuName',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        org.company_flag as 'companyFlag',
        if(org.goods_line_type = "PRODUCT_COUPON" ,-ABS(oci.purchase_price),-ABS(org.return_price * org.return_qty)) as 'financialSales',
        if(org.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,-ABS(if(og2.goods_line_type = "GOODS",(oci.purchase_price - (org.settlement_price - org.wholesale_price)),oci.purchase_price) * org.return_qty)) ,
        -ABS(IF(org.goods_line_type = "GOODS" , (org.wholesale_price * org.return_qty) , 0))) as 'distributionSales',
        -ABS(if(org.goods_line_type = "GOODS", org.wholesale_price , if((org.goods_line_type = "PRESENT" OR ccpc.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,org.wholesale_price))) as 'wholesalePrice',
        0 as 'retailPrice',
        0 as 'settlementPrice',
        0 as 'memberDiscount',
        0 as 'promotionSharePrice',
        0 as 'cashCouponSharePrice',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN -1 ELSE -ABS(org.return_qty) END as 'orderQty',
        if(org.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        orb.return_no as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        cu2.cus_store_name fxCkName
        FROM
        ord_return_base_info orb
        LEFT JOIN ord_base_info ob on orb.oid = ob.oid
        LEFT JOIN ord_return_goods_info org on orb.roid = org.roid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN (SELECT * from inter_wta_return_order_back_header GROUP  BY po_no) wro ON wro.po_no = orb.return_no
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_return_product_coupon oci on orb.roid = oci.roid and org.sku = oci.sku and org.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.pcid
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        left JOIN cus_customer_fx_store_relation cu2 on ob.store_code = cu2.fx_store_code
        where
        1=1
        and (ob.`status` IN ('FINISHED') or (ob.status in ('REJECTED') and obd.is_pay_up = 1))
        <if test="null!=startTime">
            AND
            wro.c_end_dt > #{startTime}
        </if>
        <if test="null!=endTime ">
            and
            <![CDATA[ wro.c_end_dt <= #{endTime} ]]>
        </if>
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        )

        UNION  ALL

        <!-- 自提 退货 -->
        (SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        CASE ob.delivery_type when 'HOUSE_DELIVERY' then '配送' WHEN 'SELF_TAKE' THEN '自提' end as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        orl.operation_time as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        org.sku as 'sku',
        org.sku_name as 'skuName',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        org.company_flag as 'companyFlag',
        if(org.goods_line_type = "PRODUCT_COUPON" ,-ABS(oci.purchase_price),-ABS(org.return_price * org.return_qty)) as 'financialSales',
        if(org.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,-ABS(if(og2.goods_line_type = "GOODS",(oci.purchase_price - (org.settlement_price - org.wholesale_price)),oci.purchase_price) * org.return_qty)) ,
        -ABS(IF(org.goods_line_type = "GOODS" , (org.wholesale_price * org.return_qty) , 0))) as 'distributionSales',
        -ABS(if(org.goods_line_type = "GOODS", org.wholesale_price , if((org.goods_line_type = "PRESENT" OR ccpc.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,org.wholesale_price))) as 'wholesalePrice',
        0 as 'retailPrice',
        0 as 'settlementPrice',
        0 as 'memberDiscount',
        0 as 'promotionSharePrice',
        0 as 'cashCouponSharePrice',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN -1 ELSE -ABS(org.return_qty) END as 'orderQty',
        if(org.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        orb.return_no as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        '' fxCkName
        FROM
        ord_return_base_info orb
        LEFT JOIN ord_base_info ob on orb.oid = ob.oid
        LEFT JOIN ord_return_goods_info org on orb.roid = org.roid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id

        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_return_product_coupon oci on orb.roid = oci.roid and org.sku = oci.sku and org.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.pcid
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        LEFT JOIN ord_return_lifecycle orl on orl.return_no = orb.return_no and orl.operation = "NORMAL_RETURN" and orl.post_status = "FINISHED"
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        where
        1=1
        AND ob.delivery_type = 'SELF_TAKE' and orb.return_type = 'NORMAL_RETURN'
        and orb.return_status = 'FINISHED'
        <if test="null!=startTime">
            AND
            orl.operation_time > #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[ orl.operation_time <= #{endTime} ]]>
        </if>
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        and s.store_type != 'JM'
        )

        <!-- 配送 现结装饰公司销量 -->

        UNION ALL
        (
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e2.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '配送' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE wa.end_dt WHEN null THEN '一代数据' ELSE wa.end_dt END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',
        if(og.goods_line_type = "PRODUCT_COUPON" ,oci.purchase_price , (og.order_qty ) * og.return_price ) as
        'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)) ,
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0)) as 'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        '' fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        -- LEFT JOIN gds_goods_grade gp on og.sku = gp.sku
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN (SELECT * from inter_wta_order_shipping_header where send_flag = 1 GROUP BY order_no) wa ON ob.ord_no = wa.order_no
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        LEFT JOIN emp_employee e2 on e2.emp_id = ob.sales_manager_id
        LEFT JOIN st_store st2 on st2.store_id = e2.store_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        WHERE
        ob.`status` IN (
        'PENDING_RECEIVE',
        'FINISHED',
        'REJECTED'
        )
        <if test="null!=startTime ">
            AND obd.pay_up_time >= #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[obd.pay_up_time <= #{endTime}]]> and wa.end_dt &lt; #{endTime}
        </if>
        and obd.is_pay_up = 1
        and ob.delivery_type = 'HOUSE_DELIVERY'
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        and s.store_type in ('ZS') and s.fit_compay_type = "CASH"
        )

        <!-- 之前结清 本月出货 -->
        UNION ALL
        (
        SELECT
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e2.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        '配送' as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        CASE wa.end_dt WHEN null THEN '一代数据' ELSE wa.end_dt END as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        og.sku as 'sku',
        og.sku_name as 'skuName',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        og.company_flag as 'companyFlag',
        if(og.goods_line_type = "PRODUCT_COUPON" ,oci.purchase_price , (og.order_qty ) * og.return_price ) as
        'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)) ,
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0)) as 'distributionSales',
        if(og.goods_line_type = "GOODS", og.wholesale_price , if((og.goods_line_type = "PRESENT" OR oci.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,og.wholesale_price)) as 'wholesalePrice',
        og.retail_price as 'retailPrice',
        og.settlement_price as 'settlementPrice',
        (og.retail_price - og.settlement_price) as 'memberDiscount',
        og.promotion_share_price as 'promotionSharePrice',
        og.cash_coupon_share_price as 'cashCouponSharePrice',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        if(og.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'')  as 'couponType',
        '' as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        '' fxCkName
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        -- LEFT JOIN gds_goods_grade gp on og.sku = gp.sku
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN (SELECT * from inter_wta_order_shipping_header where send_flag = 1 GROUP BY order_no) wa ON ob.ord_no = wa.order_no
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        LEFT JOIN emp_employee e2 on e2.emp_id = ob.sales_manager_id
        LEFT JOIN st_store st2 on st2.store_id = e2.store_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        WHERE
        ob.`status` IN (
        'PENDING_RECEIVE',
        'FINISHED',
        'REJECTED'
        )
        <if test="null!=startTime">
            AND obd.pay_up_time >= #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[obd.pay_up_time<= #{startTime}]]> and wa.end_dt &lt; #{endTime}
        </if>
        and obd.is_pay_up = 1
        and ob.delivery_type = 'HOUSE_DELIVERY'
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        and s.store_type in ('ZS') and s.fit_compay_type = "CASH"
        )

        <!-- 配送 现结装饰公司退货-->

        UNION ALL

        (
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        s.city as 'cityName',
        s.store_code as 'storeCode',
        s.store_name as 'storeName',
        e2.`name` as 'name',
        ob.customer_name as 'customerName',
        ob.ord_no as 'ordNo',
        CASE ob.delivery_type when 'HOUSE_DELIVERY' then '配送' WHEN 'SELF_TAKE' THEN '自提' end as 'orderType',
        CASE ob.`status` WHEN 'PENDING_RECEIVE' THEN '待收货' WHEN 'FINISHED' THEN '已完成' end as 'orderStatus',
        '' as 'selfTakeOrderTime',
        ob.create_time as 'createTime',
        wro.c_end_dt as 'shippingDate',
        CASE obd.is_pay_up WHEN 0 THEN '未结清' WHEN 1 THEN '结清' end as 'isPayUp',
        CASE obd.is_pay_up WHEN 0 THEN null WHEN 1 THEN obd.pay_up_time end as 'payUpTime',
        org.sku as 'sku',
        org.sku_name as 'skuName',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN '产品券' WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END as
        'goodsType',
        org.company_flag as 'companyFlag',
        if(org.goods_line_type = "PRODUCT_COUPON" ,-ABS(oci.purchase_price),-ABS(org.return_price * org.return_qty)) as 'financialSales',
        if(org.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,
        -ABS(if(og2.goods_line_type = "GOODS",(oci.purchase_price - (org.settlement_price - org.wholesale_price)),oci.purchase_price) * org.return_qty)) ,
        -ABS(IF(org.goods_line_type = "GOODS" , (org.wholesale_price * org.return_qty) , 0))) as 'distributionSales',
        -ABS(if(org.goods_line_type = "GOODS", org.wholesale_price , if((org.goods_line_type = "PRESENT" OR ccpc.get_type = 'MANUAL_GRANT' or oci.purchase_price = 0),0,org.wholesale_price))) as 'wholesalePrice',
        0 as 'retailPrice',
        0 as 'settlementPrice',
        0 as 'memberDiscount',
        0 as 'promotionSharePrice',
        0 as 'cashCouponSharePrice',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN -1 ELSE -ABS(org.return_qty) END as 'orderQty',
        if(org.goods_line_type = "PRODUCT_COUPON",
        IF(ccpc.get_type = "BUY",
        IF(og2.goods_line_type is not null,CASE og2.goods_line_type WHEN 'GOODS' THEN '本品' WHEN 'PRESENT' THEN '赠品' END,
        if(oci.purchase_price is null Or oci.purchase_price = 0 , '赠品','本品')),'后台发放'),'') as 'couponType',
        orb.return_no as 'returnNo',
        CASE s.store_type WHEN 'FX' THEN s.store_code WHEN 'FXCK' THEN cu.fx_store_code END as 'fxStoreCode',
        ob.customer_id as cusId,
        CASE cc.customer_type WHEN 'MEMBER' THEN '会员' WHEN 'RETAIL' then '零售' end as cusType,
        '' fxCkName
        FROM
        ord_return_base_info orb
        LEFT JOIN ord_base_info ob on orb.oid = ob.oid
        LEFT JOIN ord_return_goods_info org on orb.roid = org.roid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN (SELECT * from inter_wta_return_order_back_header GROUP  BY po_no) wro ON wro.po_no = orb.return_no
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_return_product_coupon oci on orb.roid = oci.roid and org.sku = oci.sku and org.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.pcid
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        LEFT JOIN emp_employee e2 on e2.emp_id = ob.sales_manager_id
        LEFT JOIN st_store st2 on st2.store_id = e2.store_id
        left JOIN cus_customer_fx_store_relation cu on ob.customer_id = cu.cus_id
        left JOIN cus_customer cc on cc.cus_id = ob.customer_id
        where
        1=1
        and (ob.`status` IN ('FINISHED') or (ob.status in ('REJECTED') and obd.is_pay_up = 1))
        <if test="null!=startTime">
            AND
            wro.c_end_dt > #{startTime}
        </if>
        <if test="null!=endTime">
            and
            <![CDATA[ wro.c_end_dt <= #{endTime} ]]>
        </if>
        <if test="null!=companyCode and ''!=companyCode">
            and s.store_structure_code like concat('%',#{companyCode},'%')
        </if>
        and s.store_type in ('ZS') and s.fit_compay_type = "CASH"
        )
    </sql>

    <select id="findProductSalesList" resultType="cn.com.leyizhuang.app.foundation.pojo.SellDetailsSingleDO">
        SELECT
        ua.emp_id as sellerId,
        ua.name as sellerName,
        CASE ua.storeType
        when 'ZY' then sum(ua.financialSales)
        when 'JM' then sum(ua.distributionSales)
        when 'FX' then sum(ua.distributionSales)
        when 'FXCK' then sum(ua.financialSales)
        when 'ZS' then sum(ua.financialSales)
        end
        as finishSales
        from
        (
        <include refid="newSaleSql"/>
        )ua
        group by ua.emp_idy
    </select>

    <select id="findSalesOrderList" resultType="cn.com.leyizhuang.app.foundation.pojo.response.SellDetailsOrderRespons">
        SELECT
        if(ua.orderQty >= 0,ua.ordNo,ua.returnNo) as ordNo,
        ua.shippingDate as shipmentTime,
        if(ua.orderQty >= 0,'order','return') as orderType,
        CASE ua.storeType
        when 'ZY' then sum(ua.financialSales)
        when 'JM' then sum(ua.distributionSales)
        when 'FX' then sum(ua.distributionSales)
        when 'FXCK' then sum(ua.financialSales)
        when 'ZS' then sum(ua.financialSales)
        end
        as price
        from
        (
        <include refid="newSaleSql"/>
        )ua where ua.emp_id = #{empId} GROUP BY ua.ordNo,ua.returnNo
    </select>


    <sql id="psSql">
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        e.`name` as 'name',
        ob.ord_no as 'ordNo',
        og.sku as 'sku',
        CASE wa.end_dt WHEN null THEN '' ELSE wa.end_dt END as 'shippingDate',
        if(og.goods_line_type = "PRODUCT_COUPON" ,oci.purchase_price , (og.order_qty ) * og.return_price ) as
        'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)) ,
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0) ) as 'distributionSales',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        '' as 'returnNo'
        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        -- LEFT JOIN gds_goods_grade gp on og.sku = gp.sku
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN (SELECT * from inter_wta_order_shipping_header where send_flag = 1 GROUP BY order_no) wa ON ob.ord_no = wa.order_no
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        WHERE
        ob.`status` IN (
        'PENDING_RECEIVE',
        'FINISHED',
        'REJECTED'
        )
        and obd.is_pay_up = 1
        and ob.delivery_type = 'HOUSE_DELIVERY'
    </sql>

    <sql id="ztSql">
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        e.`name` as 'name',
        ob.ord_no as 'ordNo',
        og.sku as 'sku',
        CASE os.shipping_time WHEN null THEN '' ELSE os.shipping_time END as 'shippingDate',
        if(og.goods_line_type = "PRODUCT_COUPON" ,purchase_price , (og.order_qty ) * og.return_price )
        as 'financialSales',
        if(og.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,if(og2.goods_line_type = "GOODS",(oci.purchase_price - (og.settlement_price - og.wholesale_price)),oci.purchase_price)),
        IF(og.goods_line_type = "GOODS" , (og.wholesale_price * og.order_qty) , 0) ) as
        'distributionSales',
        CASE og.goods_line_type WHEN 'PRODUCT_COUPON' THEN 1 ELSE og.order_qty END as 'orderQty',
        '' as 'returnNo'

        FROM
        ord_base_info ob LEFT JOIN ord_goods_info og on og.oid = ob.oid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_shipping os on ob.oid = os.oid
        LEFT JOIN ord_coupon_info oci on ob.oid = oci.oid and og.sku = oci.sku  and og.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.coupon_id
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        WHERE
        ob.`status` IN (
        'FINISHED'
        )
        AND ob.delivery_type = 'SELF_TAKE'
        and obd.is_pay_up = 1
        and s.store_type != 'JM'
    </sql>

    <sql id="psthSql">
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        e.`name` as 'name',
        ob.ord_no as 'ordNo',
        org.sku as 'sku',
        wro.c_end_dt as 'shippingDate',
        if(org.goods_line_type = "PRODUCT_COUPON" ,-ABS(oci.purchase_price),-ABS(org.return_price * org.return_qty)) as 'financialSales',
        if(org.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,-ABS(if(og2.goods_line_type = "GOODS",(oci.purchase_price - (org.settlement_price - org.wholesale_price)),oci.purchase_price) * org.return_qty)) ,
        -ABS(IF(org.goods_line_type = "GOODS" , (org.wholesale_price * org.return_qty) , 0))) as 'distributionSales',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN -1 ELSE -ABS(org.return_qty) END as 'orderQty',
        orb.return_no as 'returnNo'
        FROM
        ord_return_base_info orb
        LEFT JOIN ord_base_info ob on orb.oid = ob.oid
        LEFT JOIN ord_return_goods_info org on orb.roid = org.roid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN (SELECT * from inter_wta_return_order_back_header GROUP  BY po_no) wro ON wro.po_no = orb.return_no
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_return_product_coupon oci on orb.roid = oci.roid and org.sku = oci.sku and org.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.pcid
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        where
        1=1
        and ob.`status` IN ('FINISHED','REJECTED')
    </sql>

    <sql id="ztthSql">
        SELECT
        e.emp_id,
        s.store_type as 'storeType',
        e.`name` as 'name',
        ob.ord_no as 'ordNo',
        org.sku as 'sku',
        orl.operation_time as 'shippingDate',
        if(org.goods_line_type = "PRODUCT_COUPON" ,-ABS(oci.purchase_price),-ABS(org.return_price * org.return_qty)) as 'financialSales',
        if(org.goods_line_type = "PRODUCT_COUPON" ,
        if(oci.purchase_price = 0,0,-ABS(if(og2.goods_line_type = "GOODS",(oci.purchase_price - (org.settlement_price - org.wholesale_price)),oci.purchase_price) * org.return_qty)) ,
        -ABS(IF(org.goods_line_type = "GOODS" , (org.wholesale_price * org.return_qty) , 0))) as 'distributionSales',
        CASE org.goods_line_type WHEN 'PRODUCT_COUPON' THEN -1 ELSE -ABS(org.return_qty) END as 'orderQty',
        orb.return_no as 'returnNo'
        FROM
        ord_return_base_info orb
        LEFT JOIN ord_base_info ob on orb.oid = ob.oid
        LEFT JOIN ord_return_goods_info org on orb.roid = org.roid
        LEFT JOIN st_store s on ob.store_id = s.store_id
        LEFT JOIN emp_employee e on ob.sales_consult_id = e.emp_id
        LEFT JOIN ord_billing_details obd on ob.oid = obd.oid
        LEFT JOIN ord_return_product_coupon oci on orb.roid = oci.roid and org.sku = oci.sku and org.goods_line_type = 'PRODUCT_COUPON'
        LEFT JOIN cus_customer_product_coupon ccpc on ccpc.id = oci.pcid
        LEFT JOIN ord_goods_info og2 on og2.id = ccpc.goods_line_id
        LEFT JOIN ord_return_lifecycle orl on orl.return_no = orb.return_no and orl.operation = "NORMAL_RETURN" and orl.post_status = "FINISHED"
        where
        1=1
        AND ob.delivery_type = 'SELF_TAKE' and orb.return_type = 'NORMAL_RETURN'
        and orb.return_status = 'FINISHED'
        and s.store_type != 'JM'
    </sql>


    <sql id="newSaleSql">
        <!-- 配送 -->
        (
            <include refid="psSql"/>
            <if test="null!=startTime">
                AND obd.pay_up_time >= #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[ obd.pay_up_time <= #{endTime} ]]> and wa.end_dt &lt; #{endTime}
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
        )
        UNION ALL
        <!-- 自提 -->
        (
            <include refid="ztSql"/>
            <if test="null!=startTime">
                AND obd.pay_up_time >= #{startTime}
            </if>
            <if test="null!=endTime">
                and   <![CDATA[ obd.pay_up_time <= #{endTime}]]> and os.shipping_time &lt; #{endTime}
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
        )
        UNION ALL
        <!-- 配送 之前结清本月出货 -->
        (
            <include refid="psSql"/>
            <if test="null!=startTime">
                AND wa.end_dt >= #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[wa.end_dt <= #{endTime} ]]>
            </if>

            <if test="null!=startTime">
                and
                <![CDATA[ obd.pay_up_time < #{startTime} ]]>
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
        )

        UNION ALL

        <!-- 自提 之前结清本月出货 -->
        (
            <include refid="ztSql"/>
            <if test="null!=startTime">
                AND os.shipping_time >= #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[ os.shipping_time <= #{endTime} ]]>
            </if>
            <if test="null!=startTime ">
                and  <![CDATA[ obd.pay_up_time < #{startTime}]]>
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
        )

        UNION ALL

        <!-- 配送 退货 -->
        (
            <include refid="psthSql"/>
            <if test="null!=startTime">
                AND
                wro.c_end_dt > #{startTime}
            </if>
            <if test="null!=endTime ">
                and
                <![CDATA[ wro.c_end_dt <= #{endTime} ]]>
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
        )

        UNION  ALL

        <!-- 自提 退货 -->
        (
            <include refid="ztthSql"/>
            <if test="null!=startTime">
                AND
                orl.operation_time > #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[ orl.operation_time <= #{endTime} ]]>
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>

        )

        <!-- 配送 现结装饰公司销量 -->

        UNION ALL
        (
            <include refid="psSql"/>
            <if test="null!=startTime ">
                AND obd.pay_up_time >= #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[obd.pay_up_time <= #{endTime}]]> and wa.end_dt &lt; #{endTime}
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
            and s.store_type in ('ZS') and s.fit_compay_type = "CASH"
        )

        <!-- 配送 现结装饰公司退货-->

        UNION ALL

        (
            <include refid="psthSql"/>
            <if test="null!=startTime">
                AND
                wro.c_end_dt > #{startTime}
            </if>
            <if test="null!=endTime">
                and
                <![CDATA[ wro.c_end_dt <= #{endTime} ]]>
            </if>
            <if test="null!=companyCode and ''!=companyCode">
                and s.store_structure_code like concat('%',#{companyCode},'%')
            </if>
            and s.store_type in ('ZS') and s.fit_compay_type = "CASH"
        )

    </sql>
</mapper>
